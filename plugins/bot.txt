const _0x4522c5 = _0x169a;
function _0x169a(_0x3aab5e, _0x38ed8a) {
  const _0x163e39 = _0x16c4();
  _0x169a = function (_0x450556, _0x24b46b) {
    _0x450556 = _0x450556 - 117;
    let _0x312177 = _0x163e39[_0x450556];
    return _0x312177;
  };
  return _0x169a(_0x3aab5e, _0x38ed8a);
}
(function (_0x4a4b9a, _0x43fe51) {
  const _0xe712b8 = _0x169a;
  const _0x5cdae0 = _0x4a4b9a();
  while (true) {
    try {
      const _0x4d02c9 = parseInt(_0xe712b8(236)) / 1 + -parseInt(_0xe712b8(595)) / 2 * (-parseInt(_0xe712b8(191)) / 3) + -parseInt(_0xe712b8(551)) / 4 + parseInt(_0xe712b8(258)) / 5 + parseInt(_0xe712b8(563)) / 6 * (-parseInt(_0xe712b8(674)) / 7) + -parseInt(_0xe712b8(472)) / 8 * (-parseInt(_0xe712b8(246)) / 9) + parseInt(_0xe712b8(417)) / 10 * (-parseInt(_0xe712b8(401)) / 11);
      if (_0x4d02c9 === _0x43fe51) {
        break;
      } else {
        _0x5cdae0.push(_0x5cdae0.shift());
      }
    } catch (_0x11fcf9) {
      _0x5cdae0.push(_0x5cdae0.shift());
    }
  }
})(_0x16c4, 561001);
const _0x170f1d = _0x4bb2;
(function (_0x21e72b, _0x2d540c) {
  const _0x58ebf1 = _0x169a;
  const _0x3dd32b = _0x4bb2;
  const _0x147efa = _0x21e72b();
  while (true) {
    try {
      const _0x55213f = parseInt(_0x3dd32b(764)) / 1 * (-parseInt(_0x3dd32b(494)) / 2) + parseInt(_0x3dd32b(359)) / 3 * (parseInt(_0x3dd32b(837)) / 4) + parseInt(_0x3dd32b(435)) / 5 * (parseInt(_0x3dd32b(381)) / 6) + parseInt(_0x3dd32b(383)) / 7 + -parseInt(_0x3dd32b(327)) / 8 * (-parseInt(_0x3dd32b(346)) / 9) + parseInt(_0x3dd32b(616)) / 10 * (-parseInt(_0x3dd32b(469)) / 11) + parseInt(_0x3dd32b(884)) / 12;
      if (_0x55213f === _0x2d540c) {
        break;
      } else {
        _0x147efa[_0x58ebf1(647)](_0x147efa[_0x58ebf1(201)]());
      }
    } catch (_0x30fc74) {
      _0x147efa[_0x58ebf1(647)](_0x147efa[_0x58ebf1(201)]());
    }
  }
})(_0x57fc, 505011);
const events = require(_0x170f1d(530));
const Config = require(_0x170f1d(532));
let prefix = Config[_0x4522c5(609)][_0x4522c5(619)]()[_0x170f1d(889)](_0x170f1d(711)) ? "" : Config.HANDLERS[0];
let {
  isUrl,
  sleep,
  getBuffer,
  format,
  parseMention,
  parsedJid,
  getRandom,
  fancy,
  randomfancy,
  tiny,
  botpic,
  tlang
} = require(_0x170f1d(803));
function _0x16c4() {
  const _0x576e5b = ["unlink", "unafk", "turn On/Off auto bio", "WebMessageInfo", "stopsuhail", "enable/disable pm permit", "*s·¥ú ú·¥Ä…™ ü-·¥ç·¥Ö ‚Ä¢ ·¥Ä ü…™·¥†·¥á ·¥ç·¥áss·¥Ä…¢·¥á s·¥á·¥õ·¥õ…™…¥…¢s*\n\n*KeyWords for Alive Message:*\n &user :", "664xKCiMf", "\n\n waMessage : ", "from", "!!!*\n  *Set to:* ```", "group", "sticker-", "set auto reply filter messages", "mimetype", ".png", "demote", "*Provided command is'nt disbaled for rent users*", "\n\nCommand: autobio ", "concat", "Disabled Cmd list", "headers", "There's an Error While Adding Bgm Song", "remoteJid", "RENT BOT :  Unknown DisconnectReason: ", "\n\nCommand: allbgm", "audiourl", "&user", "readMessages", "writeToFile", " on | all\n  ", "permit", "readFileSync", "newbgm", "bgmarray", "*Hey i already inform you!*\n", "findOne", "971258iCugaJ", "923004591719@s.whatsapp.net", "timezone", "location", " !*", "afk @time, @date, @line(pickupline), @quote(random quote), @user*\n  \n*To turn off use ", "alive_get", "\nitem1.X-ABLabel:Click here to chat\nitem2.EMAIL;type=INTERNET:", "template: ", "mentionedJid", "email", "delete", "fileSha256", "5769442kArOSX", "replace", "RENT BOT USER : [", "*Bgm Succesfully deactivated*", "set auto reply for mention", "addbgm", "Error parsing JSON:", "sendUi", "test", "‚îå‚îÄ‚îÄ‚îÄ‚≠ì\n‚ùí *[AMAZING YOU RENTT SUHAIL-MD]*\n‚ùí _Your Session Id, Dont provide!_\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠ì\n", " \n\t", "tools", "./temp/null.", "RENT BOT :  Connection TimedOut, Reconnecting...", "rdcmd", "cMod", "stoprent", "sendVideoAsSticker", "send", "events", "name", "*Read it https://github.com/SuhailTechInfo/Suhail-Md/wiki/mention*", "*_Successfully set filter to '", "contacts", "erorr in userImages() : ", "An Error Occurred, Repeat Command!", "*[LIST OF FILTERED WORDS]*\n\n", "enable", "[ suhail : how can i help you! ]", "filter", " a Personal Assistant of ", "abio", "parse", "protocolMessage", "fromBuffer", "https://api.popcat.xyz/pickuplines", "status", "@s.whatsapp.net", "author", "'!_*", "rentbot", "getName", "participants", "\n\nCommand: ", "asSticker", "all", "owner", " !*\nHere's Your Pairing Code: *", "mp4", "üî∞ *", " ]\n‚ùí  Mode : ", "Audio converted to black screen video successfully!", "@line, ‚è∞Time: @time üöÄ@bot", "users", "reason", "flist", "pickupline", "*Auto_Bio Succesfully deactivated*", "then", "smdvid", "loggedOut", "923184474176@s.whatsapp.net", "!!!*\n*Provide Valid instruction, such as on/off to enable/disable pmPermit.*", "format", "unAfk.*\n  ", "call", "rmdirSync", "user", "sounds: ", " -c:v copy -c:a aac -map 0:v:0 -map 1:a:0 ", "copyNForward", "*_Request denied!_*", "ERROR IN AFK MAIN\n", "*Song _", "ERROR SENDING MENTION\t", "sendFileUrl", "*You did'nt set mention!*\n*https://github.com/SuhailTechInfo/Suhail-Md/wiki/mention*", "[GROUP PARTICEPENTS ADD ERROR] ", "subject", "get list of auto reply word", "sendMedia", "status@broadcast", "bind", "decodeJid", "head", "node-fetch", "ERROR", "off", "mention", "contextInfo", "application/octet-stream", "_Hey buddy! I am already a bot!_", "660nmIOmh", "videoMessage", "  \n  \n  *whatsapp bio automatically update in every minuts!*\n  ", " -vf \"format=yuv420p\" ./blackScreen.mp4", "@broadcast", "400955UpqzON", "120363025246125888@g.us", "alias", "alloc", "add", "Suhail-MD On Rent", "_ERROR!_", "silent", "writeFileSync", "verifiedName", "0@s.whatsapp.net", "167060DxZJSY", "bot", "isBaileys", "[GROUP PARTICEPENTS REMOVE ERROR] ", "*Please wait!*", "audioMessage", "./temp/convertedVideo.mp4", "\n  *Example: My owner is AFK*\n  *Last seen before #lastseen*\n  *Also update status: ", "warncount", "3861iSnnXv", "restartRequired", "asDocument", "30wRDsyY", "ERROR IN MENTION CMD : ", "\n\nCommand: addbgm", "rentdisable", "promote", "[GROUP PARTICEPENTS PROMOTE ERROR] ", "existsSync", "participant", "*_Pmpermit disabled, please enable it!!_*", "END ----- CALLED!", "stop rentbot from a user!", "pair", "sendImageAsSticker", "ERRORR!", ".mov", "suhaillist", "gurupaste", "*No user has rent 'suhail md' yet!*", "open", "length", "alive_text", "isGroup", "type/", "stop auto reply from a word", "RENT BOT :  ‚úÖ Whatsapp Login Successful!", "messages.upsert", "disablecmds", "audio", "RENT BOT :  Bad Session File, Please Delete Session and Scan Again", "rentlist", "*Hii this is ", "remove a song from bgm", "mute", "values", "join", "connectionLost", "923184474176", "new", "group-participants.update", "slice", "mtype", "messages", "botname", "504616gMukdO", "flist to get list of filtered words!*", "‚¨°‚îÇ‚ñ∏ ", "stringify", "rentbot pair by reply/mention user!_", "alive_image", "forEach", "*_No user has rent 'suhail md' yet!_*\n*_Can't disable cmds for rented users, If the bot is not rented!_*", "ephemeralMessage", "*Use ", "splice", "*Provide a valid cmd name, that available in bot!*\n*To Stop using from users who have rent 'Suhail'!", "Suhail-Md", "*Provide a word that set in filter!*\n*Use ", "‚û¨ Suhail SER", "\n\nCommand: bgm ", "match", "CmdName: pmPermit Required", "_Can't use QR right now!_", "*_Use on/off to enable/disable Bgm sounds_*", "url", "ptv", "^[]", "loadMessage", "downloadMediaMessage", "[ERROR] ", "reply_message", " *BGM SONG INFORMATION*\n", " : ", "quoted", "error", "announcement", "creds", "[GROUP PARTICEPENTS DEMOTE ERROR] ", "promises", "imageMessage", "updateOne", "sendFromUrl", "*Hey @", " on | 212,91``` \n  \n\n", "style", "&uptime", "reply", "1SFbmyi", "reply_text", "RENT BOT :  Connection Lost from Server, reconnecting...", "text", "find", "statusCode", "*Name _'", "*Hii\n            ", "content-type", ".avi", "thumbnail", "_Baileys/", "false", "WORKTYPE", "isBot", "pattern", "&quote", "Activated", "Days ", "&line", "alive_video", "use .mention info to get all inforamtion of mention!", "Suhail;;;", "' Successfuly disabled for rented users!*", "entries", "Scan this QR to become a temporary bot\n\n1. Click the three dots in the top right corner\n2. Tap Link Devices\n3. Scan this QR \nQR Expired in 30 seconds", "*Rent bot successfully LOGOUT from @", "enabled", "Erorr in client.sendFileUrl() : ", "*Provide a valid cmd name, that available in bot!*\n*To enable using from users who have rent 'Suhail'!", "isBuffer", "matchAll", "!_\n_OR : ", "```\n  \n  *Available Cmds:*```\n  ", "*Hello @", "updateProfileStatus", "448800AWSaJK", "client.js --------- messages.upsert \n", "3SjMmej", "Unknown", "SmdOfficial", " Have own whatsapp bot!*:", "setCmdAlias", "senderName", "notify", "RENT BOT :  ‚ÑπÔ∏è Connecting to WhatsApp...", "' Successfuly enable for rented users!*", "image", "12ybmCfr", "Error updating data:", "video/mp4", "nillll", "linkPreview", "*New Song Added in BGM with Name : ", "body", "viewonce", "badSession", "@g.us", "*_PmPermit deactivated Succesfully!!!_*", "moment-timezone", "function", "get url for audio and converted into black video", "random", "bgm", "filter word:reply_text!*", "File deleted successfully", "Chrome", "./blackScreen.mp4", "\n\n*_Next time You'll be blocked_*", " for pm._*", "uptime", "file", "*_Uhh Dear, PmPermit Already enabled!_*", "act", "lastIndexOf", "chat", "user", "RENT BOT :  Device Logged Out, Please Scan Again And Run.", "isCreator", "ext", "11938ildkWw", "Error deleting file:", "schedule", "\n\nCommand: AFKs", "rentbotlist", "error while checking bgm sounds\n, ", "OwnerName", "*Please reply to a user for action.*", "base64", "BOT_NAME", "\nitem1.TEL;waid=", " need permission for pm_*", "end", "registered", "HANDLERS", "‚î¨‚îÇ‚ñ∏\n‚îÇ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑‚ñ∏‚ñ∏\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ¬∑¬∑¬∑‚ñ∏", "../lib/exif", "./lib/Asta.js/sendWelcome()\n", "sendFile", "viewOnce", "relayMessage", "data", "getFile", "poll", "toLowerCase", "*Please do not Spam,You got ", "\nCommand: disapprove ", ", Minutes ", "WhatsApp", "rent", "sendMessage", "*Can't set filter!*", ".m4v", "areply", "Credentials file saved successfully.", " Succesfully!_*\n*_Now ", "fromMe", "unlinkSync", "video", "getbgm", "[GROUP] : ", "keys", "\n\n*Also Add photo and video url in Alive*\n", "ffmpeg -i ./blackScreen.mp4 -i ", "black", "rentuser", "info", "msg", "' deleted!_*", "./temp/", "*provide cmdName to disable for rent user!*", "ownername", "push", "../config.js", "../lib/serialized", " \n*Parmanent Disabled Commands*\n\t", "logout", " *@", "*You ask for \"Session\" but not provide session_ID!*", "230216lXWRkm", "*Auto_Bio Succesfully enabled*", "logout running bot with device !", "fakeMessage", "key", ";;;;\nitem4.X-ABLabel:Region\nEND:VCARD", "```.alive``` url_here \n```Hey &user``` üçÇ\n```I Am Suhail-Md, A Multidevice Whatsapp User Bot.```\nBot alive since ```&uptime```\n*Quote:* ```&quote```\n*Pickup Line:* ```&line```\n\n", "< cmname / tag / ytmp4 etc.>", "*Can't delete filter!*", "\nitem3.X-ABLabel:GitHub\nitem4.ADR:;;", ", Hours ", "Disabled_*\n\nUse *", "path", "autobio off* to turn off auto_bio!", "listbgm", "```.alive Your_Alive_Message_here``` https://telegra.ph/file/ec9bc5038601821f2eb84.jpg", "*Give Me Song Name to Delete From BGM*", "alive_url", "trim", "aisa/karachi", "2362213Ozseqz", "fs-extra", "ffmpeg -f lavfi -i color=c=black:s=1280x720:d=", "order", "image/webp", "RENT BOT :  Connection Replaced, Another New Session Opened, Please Close Current Session First", "add song in bgm", "<on/off>", "substring", "disable", "*_Revoked permission of ", "unmute", "Finally, You are back!", "split", "*_PmPermit ", "disapprove", "toUpperCase", "alive", "\n\nCommand:flist", "conversation", "An error occurred:", "Suhail-Md Rent list", "https://pastebin.guruapi.tech/pastes?action=getpaste&id=", "ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 ", "*\n\n*_Use Pair Code to become a temporary bot!_*\n\n1. Click the three dots in the top right corner\n2. Tap Link Devices\n3. Scan this QR \n4. Click Connect with Number\n\n*_NOW Put above \"PAir-Code\" before it'll expire!_*\n", "Updated", "sender", "RENT BOT :  Restart Required, Restarting...", "parseMention", "./whatsapp.json", "startAutoBio entereed!", "downloadAndSaveMediaMessage", "```.alive Your_Alive_Message_here```", ".mp4", "settings", "remove", "\n\nUse *", "connection.update", ".webp", "creds.json", "gif", "null", "some", "webp", "Disable cmds for rent bot users!", "lastseen", "Shows a list of users who has rent a bot!", "‚îå‚îÄ‚îÄ‚îÄ‚≠ì\n‚ùí  [SUHAIL-MD CONNECTED] \n‚ùí  Prefix : [ ", "BEGIN:VCARD\nVERSION:3.0\nN:", "bot_", "get", "pino", "\n\nCommand: approve ", " Contact", "\nFN:", "_Reply to Audio MEssage!_", "6311964NwyYzY", "./exif", "turn off away from keyboard", "prefix", "\n‚ùí  Plugins : ", "title", "[CALL ACCEPT ERROR] ", "not_announcement", "packname", "approve", "ban", "forwardOrBroadCast2", "includes", "deact", "image/jpeg", "Can't get SESSION_ID from GURU Server\nPlease Scan Qr From ", "../lib/", "'_ does not exist in BGM.*", "rentbot session scan_Id_\n", "8945", "times", "message", "sendTextWithMentions", "react", "rentcmdoff", "updateBlockStatus", "desc", "string", "userImages", "disabled", "jid", "afk", "CLIENT STORE ERROR:\n", "true", "Chrome (Linux)", "groupMetadata", "date", "creds.update", "*\n\n", "*_Auto_Bio currently *", "contact", "\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠ì", "\n*Temporary Disabled commands*\n\t", "file-type", "permit_values", "startsWith", "externalAdReply", "\n\n*Powered by ", "*Mention updated!*", "smd", "\n  *Bio set:* ", "stickerMessage", "rentlistcmd", "abgm", "Enabled_*\n*Currently Set:* ", "cmd", "https://whatsapp.com/channel/0029Va9thusJP20yWxQ6N643", "autobio on* to turn on auto_bio!", "type", "connectionClosed", "log", "away from keyboard", "private", "connecting", "viewOnceMessage", "*Auto_Bio already disabled*", "REVOKE", "connectionReplaced", "rentbot pair | ", "update", "map", "toString", ".*\n\n*Please do not send message in pm else you will be blocked automatically.*\n\n_Please wait until my owner responds to you._\n\n", "*Please follow the below option!*\n    _", "\n\nCommand:stop", "*_Uhh Dear, PmPermit Already disabled!_*", "allbgm", "renters", "555KdtQnV", "documentMessage", "Toggle On/Off to enable/disable bgm", "sendContact", " warnings.*", "sticker", "Unknown link: ", "result", "session", "fluent-ffmpeg", "shift", "word", "*[Suhail-MD Rent Users]*\n\n", "@lastseen", "endsWith", "isAsta", ".jpg", "category", "autobio @bot(botName) @owner(ownerName) @time @date @line(pickupline) @quote(@randome quote) @user*\n  ", "commands", "*Œπ Œ±–º œÉŒ∑‚ÑìŒπŒ∑—î –ΩœÉœâ ¬¢Œ±Œ∑ Œπ –Ω—î‚ÑìœÅ —ÉœÉœÖ* \n\n_Œπ Œ±–º ·¥çœÖ‚Ñì—ÇŒπ ‘É—îŒΩŒπ·¥Ñ—î œâ–ΩŒ±—Ç—ïŒ±œÅœÅ –≤œÉ—Ç_ \n_C Ä—îŒ±t—îd –≤·Éß : —ïœÖ–ΩŒ±Œπ‚Ñì t—î·¥Ñ ú info_\n_If any query : wa.me/923184474176_\n\n\n*_Update Alive Message by adding text with Alive_* \n*Eg: _.alive Your_Alive_Message_*", "Uhh Please, Reply to Audio/Video To Add In Bgm", "*PmPermit Currently *", "mkdir", "caption", ", Use ", "allowJids", "pushName", "Approves that person for pm", "toDataURL", "dir", "audio/mpeg", "&time", "checkban.ban", "4757228", "rlcmd", "_\n    _", "ignore", "fromObject", "utf-8", "documentWithCaptionMessage", ".jpeg", "autobio", "output", "set filter message to specific text, so that bot replied user from chat by giving text!", "273505fSJgkG", "blockJids", "*_You didn't set any filter!_*", "*_please provide number for \"pair\" connection!_*\n_Example: ", "\n\n*Update Alive by adding text with Alive*\n", "exec", "forwardOrBroadCast", "[CALL ERROR] ", "sendText", "yes", "81ivgNaV", "serializeM", "Forward function Called and Type is : ", "\nlastseen : ", "conservation", "\n\nCommand: UnAFK", "rentsuhail", "categories", " off \n  ", "*You are not AFK.*", "@hapi/boom", "rentenable", "2025080CqIrFh"];
  _0x16c4 = function () {
    return _0x576e5b;
  };
  return _0x16c4();
}
if (global[_0x170f1d(626)] instanceof Array) {
  console[_0x170f1d(659)]();
} else {
  global[_0x4522c5(190)] = [];
}
if (global[_0x170f1d(550)] instanceof Array) {
  console[_0x4522c5(173)]();
} else {
  global[_0x170f1d(550)] = [];
}
let disabledperma = [_0x170f1d(672), _0x170f1d(393), _0x170f1d(334), _0x4522c5(432), _0x4522c5(257)];
const {
  userdb,
  smd,
  fetchJson,
  smdJson,
  smdBuffer,
  sendWelcome,
  runtime,
  bot_
} = require(_0x170f1d(803));
const util = require("util");
const fs = require(_0x170f1d(410));
const axios = require(_0x170f1d(467));
const fetch = require(_0x170f1d(458));
const {
  cmd
} = require(_0x170f1d(773));
const {
  TelegraPh
} = require(_0x170f1d(823));
const ffmpeg = require(_0x170f1d(597));
const exec = util[_0x170f1d(682)](require(_0x170f1d(687))[_0x170f1d(461)]);
let db = {};
db[_0x170f1d(443)] = async () => {
  const _0x43578e = _0x4522c5;
  const _0x3c5964 = _0x170f1d;
  const _0x257578 = _0x3c5964(856);
  try {
    return JSON[_0x3c5964(519)](fs[_0x43578e(291)](_0x257578, _0x3c5964(628)));
  } catch (_0x805239) {
    return {};
  }
};
db[_0x4522c5(182)] = async _0x4049ca => {
  const _0x39cbf8 = _0x4522c5;
  const _0x4ede9c = _0x170f1d;
  try {
    const _0x531de8 = _0x4ede9c(856);
    const _0x3601f9 = db[_0x4ede9c(443)]();
    const _0x566b25 = {
      ..._0x3601f9,
      ..._0x4049ca
    };
    fs[_0x4ede9c(424)](_0x531de8, JSON[_0x4ede9c(713)](_0x566b25, null, 2), _0x4ede9c(628));
    return _0x566b25;
  } catch (_0x52b8a1) {
    console.error(_0x39cbf8(564), _0x52b8a1);
  }
};
let filter = false;
let mention = false;
smd({
  cmdname: "mention",
  fromMe: true,
  category: _0x170f1d(652),
  desc: _0x170f1d(903),
  use: "[ url type/audio ]",
  usage: _0x170f1d(505)
}, async (_0x19267e, _0x33338f) => {
  const _0x4a61d0 = _0x4522c5;
  const _0xa0bfa6 = _0x170f1d;
  try {
    _0x33338f = _0x33338f || _0x19267e.reply_text;
    if (!_0x33338f) {
      return await _0x19267e[_0xa0bfa6(543)](_0x4a61d0(549) + _0x19267e[_0xa0bfa6(379)] + _0xa0bfa6(604) + prefix + _0xa0bfa6(336), {
        mentions: [_0x19267e[_0xa0bfa6(836)]]
      }, _0xa0bfa6(660));
    }
    if (!_0x33338f) {
      return _0x19267e[_0x4a61d0(327)]("@" + _0x19267e[_0xa0bfa6(908)][_0xa0bfa6(524)]("@")[0], {
        mentions: [_0x19267e[_0xa0bfa6(908)]]
      });
    }
    let _0x24e941 = await db[_0xa0bfa6(443)]();
    mention = _0x24e941[_0xa0bfa6(417)] || {};
    if (_0x33338f === _0xa0bfa6(696)) {
      return await _0x19267e[_0x4a61d0(514)](_0xa0bfa6(714));
    }
    if (_0x33338f === _0x4a61d0(724)) {
      if (mention[_0xa0bfa6(443)]) {
        return await _0x19267e[_0xa0bfa6(543)](mention[_0xa0bfa6(443)]);
      } else {
        return await _0x19267e[_0xa0bfa6(543)](_0xa0bfa6(361));
      }
    } else if (_0x33338f === _0xa0bfa6(791) || _0x33338f === _0xa0bfa6(796) || _0x33338f === _0xa0bfa6(669)) {
      mention[_0xa0bfa6(551)] = false;
    } else if (_0x33338f === "on" || _0x33338f === "act" || _0x33338f === _0xa0bfa6(893)) {
      mention[_0xa0bfa6(551)] = true;
    } else {
      try {
        delete _0x24e941[_0xa0bfa6(417)];
        mention = {};
      } catch {}
      mention[_0xa0bfa6(443)] = _0x33338f;
      const _0x12a29b = /\{.*\}/;
      const _0x1899e8 = _0x33338f[_0x4a61d0(488)](_0x12a29b);
      if (_0x1899e8) {
        const _0x21d2be = _0x1899e8[0];
        try {
          const _0x1c0968 = JSON[_0xa0bfa6(519)](_0x21d2be);
          mention[_0xa0bfa6(594)] = _0x1c0968;
          _0x33338f = _0x33338f[_0xa0bfa6(782)](_0x12a29b, "");
        } catch (_0x3baf90) {
          console[_0xa0bfa6(847)](_0xa0bfa6(591), _0x3baf90);
        }
      }
      mention[_0xa0bfa6(839)] = _0x33338f;
      const _0x42637e = _0x47b50b(_0x33338f);
    }
    function _0x47b50b(_0x1292f6) {
      const _0x211c12 = _0x4a61d0;
      const _0x1c9180 = _0xa0bfa6;
      const _0x173ae1 = _0x1292f6.split("\n");
      mention[_0x1c9180(579)] = {
        text: []
      };
      let _0x3b8e1f = [_0x1c9180(584), _0x1c9180(619), "audio", _0x1c9180(386), _0x211c12(196)];
      let _0x295e66 = null;
      for (const _0xe0664b of _0x173ae1) {
        const _0x31926a = _0xe0664b[_0x1c9180(524)](" ");
        if (_0x31926a[_0x211c12(448)] >= 2) {
          const _0x22b531 = _0x31926a[_0x1c9180(418)](_0x2dc92 => _0x2dc92[_0x211c12(158)](_0x1c9180(4
